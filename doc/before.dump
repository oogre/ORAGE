0x7f93dd000000	•	1,50 KiB	ORAGE	asio::error::get_addrinfo_category()
0x7f93dd000600	•	1,50 KiB	ORAGE	__cxx_global_var_init.2
0x608000059fe0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a070	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a040	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a100	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a130	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a0d0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a010	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a3d0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a370	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a1c0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a190	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a160	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a340	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a310	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a220	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a1f0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a2e0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a280	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a250	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a2b0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a400	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a430	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a460	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800005a490	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, EKeySpecial>, void*> > > > std::__1::__tree<std::__1::__value_type<int, EKeySpecial>, std::__1::__map_value_compare<int, std::__1::__value_type<int, EKeySpecial>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, EKeySpecial> > >::__construct_node<std::__1::pair<int const, EKeySpecial> const&>(std::__1::pair<int const, EKeySpecial> const&&&)
0x60800046e200	•	64 Bytes	ORAGE	PerfTimer::Reset()
0x7f93dd001000	•	18,00 KiB	ORAGE	PerfTimer::Reset()
0x6040000f0380	•	128 Bytes	ORAGE	PerfTimer::Reset()
0x60400002c1e0	•	32 Bytes	ORAGE	PerfTimer::Reset()
0x6040000d04c0	•	112 Bytes	ORAGE	PerfTimer::Reset()
0x60400002c220	•	32 Bytes	ORAGE	PerfTimer::Reset()
0x6040000b27e0	•	96 Bytes	ORAGE	__cxx_global_var_init
0x604000059f80	•	48 Bytes	ORAGE	std::__1::shared_ptr<cinder::log::LoggerConsole> std::__1::shared_ptr<cinder::log::LoggerConsole>::make_shared<>()
0x604000016080	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<cinder::log::Logger>, std::__1::allocator<std::__1::shared_ptr<cinder::log::Logger> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<cinder::log::Logger> >&)
0x60c0000160e0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<float, cinder::ColorAT<unsigned char> >, std::__1::allocator<std::__1::pair<float, cinder::ColorAT<unsigned char> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<float, cinder::ColorAT<unsigned char> > >&)
0x60c0000160b0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<float, cinder::ColorAT<unsigned char> >, std::__1::allocator<std::__1::pair<float, cinder::ColorAT<unsigned char> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<float, cinder::ColorAT<unsigned char> > >&)
0x60000015b1d0	•	176 Bytes	ORAGE	main
0x60000002c540	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::app::Renderer>::shared_ptr<cinder::app::RendererGl>(cinder::app::RendererGl*, std::__1::enable_if<is_convertible<cinder::app::RendererGl*, cinder::app::Renderer*>::value, std::__1::shared_ptr<cinder::app::Renderer>::__nat>::type)
0x6000000d05a0	•	112 Bytes	ORAGE	cinder::app::Platform::get()
0x600000095cc0	•	80 Bytes	ORAGE	cinder::ImageIoRegistrar::instance()
0x60000002c8c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::ImageIoRegistrar::Inst>::shared_ptr<cinder::ImageIoRegistrar::Inst>(cinder::ImageIoRegistrar::Inst*, std::__1::enable_if<is_convertible<cinder::ImageIoRegistrar::Inst*, cinder::ImageIoRegistrar::Inst*>::value, std::__1::shared_ptr<cinder::ImageIoRegistrar::Inst>::__nat>::type)
0x60000005a6a0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095d10	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a670	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095d60	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a640	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095db0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x600000095e00	•	80 Bytes	ORAGE	cinder::ImageSourceFileQuartz::registerSelf()
0x60c00005b3f0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000096b20	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005ab50	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097660	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b390	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c0000976b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a610	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095e50	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b3c0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c0000977a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005aa30	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c0000977f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005ad00	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097840	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60400005a190	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x604000095130	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005b4b0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097110	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x604000059fb0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6040000950e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a7f0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095ea0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b570	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097890	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005ad90	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c0000978e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b5a0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097930	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b5d0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097980	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b600	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c0000979d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b540	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097a20	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b510	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097a70	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b450	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097ac0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60400005a1f0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x604000095090	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60400005a220	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6040000952c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60400005a430	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x604000095040	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60400005a7f0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x604000094ff0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60400005a880	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x604000095310	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005b6f0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097160	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a6d0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095ef0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bc60	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6080000971b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005b4e0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097200	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005b8d0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097250	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bcf0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6080000972a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bc90	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6080000972f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005be10	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097340	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bd80	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097390	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bdb0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6080000973e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bd20	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097430	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005a850	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097b10	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005b630	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097480	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005be70	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6080000974d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bde0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097520	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005be40	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x608000097570	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60800005bcc0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x6080000975c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a5b0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095f40	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b480	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097b60	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005a820	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097bb0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a850	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095f90	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a550	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000095fe0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005afd0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097c00	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b630	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097c50	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005b420	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097ca0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60c00005a730	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x60c000097cf0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a730	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000096030	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a580	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&>(std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> const&&&)
0x600000096080	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options), std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > > >&&)
0x60000005a880	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> >(std::__1::pair<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>&&)
0x600000096120	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096170	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6000000961c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096210	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096260	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6000000962b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096300	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096350	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6000000963a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6000000963f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x608000097660	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6080000976b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x608000097700	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x608000097750	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c000097d90	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c000097de0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c000097e30	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c000097e80	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c000097ed0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c000097f20	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c000097f70	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c000097fc0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c000098010	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c000098060	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c0000980b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c000098100	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60c000098150	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x60c0000981a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096440	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096490	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6000000964e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096530	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096580	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6000000965d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096620	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096670	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6000000966c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096710	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096760	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6000000967b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x600000096800	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x600000096850	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6080000977a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6080000977f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x608000097840	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x608000097890	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6080000978e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x608000097930	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x608000097980	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6080000979d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x608000097a20	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x608000097a70	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x6000000968a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&>(std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&&&)
0x6000000968f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::multimap<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >&&)
0x60000005aa00	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> >(std::__1::pair<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>&&)
0x60000005ab50	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> > >::__construct_node<std::__1::pair<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)> >(std::__1::pair<int, std::__1::shared_ptr<cinder::ImageSource> (*)(std::__1::shared_ptr<cinder::DataSource>, cinder::ImageSource::Options)>&&)
0x6000000960d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, void*> > > > std::__1::__tree<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__construct_node<std::__1::pair<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(std::__1::pair<int, std::__1::pair<std::__1::shared_ptr<cinder::ImageTarget> (*)(std::__1::shared_ptr<cinder::DataTarget>, std::__1::shared_ptr<cinder::ImageSource>, cinder::ImageTarget::Options, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&&)
0x60000002c860	•	32 Bytes	ORAGE	std::__1::__split_buffer<ghc::filesystem::path, std::__1::allocator<ghc::filesystem::path>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<ghc::filesystem::path>&)
0x6000000b2960	•	96 Bytes	ORAGE	std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&)
0x7f93dc9011c0	•	624 Bytes	ORAGE	void cinder::app::AppMac::main<ORAGEApp>(std::__1::shared_ptr<cinder::app::Renderer> const&, char const*, int, char* const*, std::__1::function<void (cinder::app::AppBase::Settings*)> const&)
0x6000000d0760	•	112 Bytes	ORAGE	cinder::Timeline::create()
0x60000002c820	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::Timeline>::shared_ptr<cinder::Timeline>(cinder::Timeline*, std::__1::enable_if<is_convertible<cinder::Timeline*, cinder::Timeline*>::value, std::__1::shared_ptr<cinder::Timeline>::__nat>::type)
0x600000016160	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60000002c940	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016110	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60000002c3a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000161c0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60000002c8e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016100	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60000002c920	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x608000016320	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<bool (), cinder::signals::CollectorBooleanAnd>::SignalProto()
0x60800002d380	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6080000162c0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (std::__1::shared_ptr<cinder::Display> const&), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60800002d200	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x608000016310	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (std::__1::shared_ptr<cinder::Display> const&), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60800002d2c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x608000016340	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (std::__1::shared_ptr<cinder::Display> const&), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x60800002d320	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x60800002d300	•	32 Bytes	ORAGE	std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::allocate(unsigned long)
0x608000016300	•	16 Bytes	ORAGE	cinder::app::AppBase::AppBase()
0x6080000b2ae0	•	96 Bytes	ORAGE	asio::execution_context::execution_context()
0x7f93d8f02c20	•	272 Bytes	ORAGE	asio::io_context::io_context()
0x60800002d2e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<asio::io_context>::shared_ptr<asio::io_context>(asio::io_context*, std::__1::enable_if<is_convertible<asio::io_context*, asio::io_context*>::value, std::__1::shared_ptr<asio::io_context>::__nat>::type)
0x6080000162f0	•	16 Bytes	ORAGE	cinder::app::AppBase::AppBase()
0x60800002d3a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<asio::io_context::work>::shared_ptr<asio::io_context::work>(asio::io_context::work*, std::__1::enable_if<is_convertible<asio::io_context::work*, asio::io_context::work*>::value, std::__1::shared_ptr<asio::io_context::work>::__nat>::type)
0x608000097ac0	•	80 Bytes	ORAGE	cinder::app::AppMac::AppMac()
0x60800046f840	•	64 Bytes	ORAGE	cinder::app::AppMac::AppMac()
0x600000675900	•	64 Bytes	ORAGE	-[AppImplMac init:settings:]
0x60000005c2f0	•	48 Bytes	ORAGE	-[AppImplMac init:settings:]
0x600000675980	•	64 Bytes	ORAGE	-[AppImplMac setApplicationMenu:]
0x60000010ce70	•	144 Bytes	ORAGE	-[AppImplMac setApplicationMenu:]
0x6000000b2ea0	•	96 Bytes	ORAGE	-[AppImplMac setApplicationMenu:]
0x6000000b2f60	•	96 Bytes	ORAGE	+[WindowImplBasicCocoa instantiate:withAppImpl:]
0x7f93dc9044f0	•	880 Bytes	ORAGE	cinder::app::Window::privateCreate__(id<WindowImplCocoa>, cinder::app::AppBase*)
0x600000016340	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalProto()
0x600000035340	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016380	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalProto()
0x6000000353c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016320	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalProto()
0x6000000353e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016430	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalProto()
0x600000035400	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000163d0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalProto()
0x600000035420	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000163e0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::TouchEvent&), cinder::app::CollectorEvent<cinder::app::TouchEvent> >::SignalProto()
0x600000035440	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000163f0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::TouchEvent&), cinder::app::CollectorEvent<cinder::app::TouchEvent> >::SignalProto()
0x600000035460	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016400	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::TouchEvent&), cinder::app::CollectorEvent<cinder::app::TouchEvent> >::SignalProto()
0x600000035480	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016410	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalProto()
0x6000000354a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016420	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalProto()
0x6000000354c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000163b0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x6000000354e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000163c0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x600000035500	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016450	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x600000035520	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016470	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x600000035540	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016480	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x600000035560	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x600000016490	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalProto()
0x600000035580	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000164a0	•	16 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::FileDropEvent&), cinder::app::CollectorEvent<cinder::app::FileDropEvent> >::SignalProto()
0x6000000355a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::signals::detail::Disconnector>::shared_ptr<cinder::signals::detail::Disconnector>(cinder::signals::detail::Disconnector*, std::__1::enable_if<is_convertible<cinder::signals::detail::Disconnector*, cinder::signals::detail::Disconnector*>::value, std::__1::shared_ptr<cinder::signals::detail::Disconnector>::__nat>::type)
0x6000000355c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::app::Window>::shared_ptr<cinder::app::Window>(cinder::app::Window*, std::__1::enable_if<is_convertible<cinder::app::Window*, cinder::app::Window*>::value, std::__1::shared_ptr<cinder::app::Window>::__nat>::type)
0x600000675d80	•	64 Bytes	ORAGE	cinder::app::PlatformCocoa::getDisplays()
0x600000035600	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::Display>::shared_ptr<cinder::DisplayMac>(cinder::DisplayMac*, std::__1::enable_if<is_convertible<cinder::DisplayMac*, cinder::Display*>::value, std::__1::shared_ptr<cinder::Display>::__nat>::type)
0x6000000164b0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<cinder::Display>, std::__1::allocator<std::__1::shared_ptr<cinder::Display> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<cinder::Display> >&)
0x6040001e0900	•	256 Bytes	ORAGE	+[WindowImplBasicCocoa instantiate:withAppImpl:]
0x60800015bb70	•	176 Bytes	ORAGE	cinder::app::RendererGl::clone() const
0x608000030020	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::app::RendererGl>::shared_ptr<cinder::app::RendererGl>(cinder::app::RendererGl*, std::__1::enable_if<is_convertible<cinder::app::RendererGl*, cinder::app::RendererGl*>::value, std::__1::shared_ptr<cinder::app::RendererGl>::__nat>::type)
0x6080001e0800	•	256 Bytes	ORAGE	+[WindowImplBasicCocoa instantiate:withAppImpl:]
0x6080000993c0	•	80 Bytes	ORAGE	cinder::app::RendererGl::setup(CGRect, NSView*, std::__1::shared_ptr<cinder::app::Renderer>, bool)
0x6080002407e0	•	48 Bytes	ORAGE	cinder::app::RendererGl::setup(CGRect, NSView*, std::__1::shared_ptr<cinder::app::Renderer>, bool)
0x608000099460	•	80 Bytes	ORAGE	+[RendererImplGlMac defaultPixelFormat:]
0x6080002408d0	•	48 Bytes	ORAGE	+[RendererImplGlMac defaultPixelFormat:]
0x60400016dbc0	•	192 Bytes	ORAGE	-[RendererImplGlMac initWithFrame:cinderView:renderer:sharedRenderer:withRetina:]
0x604000016640	•	16 Bytes	ORAGE	cinder::gl::allocateEnvironmentCore()
0x608000240c60	•	48 Bytes	ORAGE	-[RendererImplGlMac initWithFrame:cinderView:renderer:sharedRenderer:withRetina:]
0x608000030320	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Context::PlatformData>::shared_ptr<cinder::gl::PlatformDataMac>(cinder::gl::PlatformDataMac*, std::__1::enable_if<is_convertible<cinder::gl::PlatformDataMac*, cinder::gl::Context::PlatformData*>::value, std::__1::shared_ptr<cinder::gl::Context::PlatformData>::__nat>::type)
0x7f93d9016c00	•	1,00 KiB	ORAGE	cinder::gl::Context::createFromExisting(std::__1::shared_ptr<cinder::gl::Context::PlatformData> const&)
0x6080000f1d00	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x608000030820	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x608000475900	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x608000475480	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x608000016960	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x6080004753c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x608000475400	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x6080000169a0	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned char>&)
0x608000475340	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x6080000169b0	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned char>&)
0x6080000169c0	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned int>&)
0x6080000169d0	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned int>&)
0x60800016dec0	•	192 Bytes	ORAGE	cinder::gl::VertBatch::create(unsigned int, bool)
0x6080000f1e00	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x608000030800	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x608000240c30	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x6080000169e0	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x6080000307e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6080000307c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::VertBatch>::shared_ptr<cinder::gl::VertBatch>(cinder::gl::VertBatch*, std::__1::enable_if<is_convertible<cinder::gl::VertBatch*, cinder::gl::VertBatch*>::value, std::__1::shared_ptr<cinder::gl::VertBatch>::__nat>::type)
0x6080000169f0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<glm::vec<2, int, (glm::qualifier)0>, glm::vec<2, int, (glm::qualifier)0> >, std::__1::allocator<std::__1::pair<glm::vec<2, int, (glm::qualifier)0>, glm::vec<2, int, (glm::qualifier)0> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<glm::vec<2, int, (glm::qualifier)0>, glm::vec<2, int, (glm::qualifier)0> > >&)
0x6080001a0fc0	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x608000475280	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475300	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475240	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x6080004752c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475440	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475940	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475980	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x6080004759c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475a00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475a40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475a80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::geom::Attrib> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000099780	•	80 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x608000475ac0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475b00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475b40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475b80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475bc0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475c00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475c40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475c80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475cc0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475d00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475d40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475d80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475dc0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475e00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475e40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475e80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475ec0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cinder::gl::UniformSemantic> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&>&&, std::__1::tuple<>&&)
0x608000475f00	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x608000240bd0	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x608000475f40	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x608000475f80	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x608000030720	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x6080000996e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, void*> > > > std::__1::__tree<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, std::__1::__map_value_compare<cinder::gl::ShaderDef, std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, std::__1::less<cinder::gl::ShaderDef>, true>, std::__1::allocator<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<cinder::gl::ShaderDef const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<cinder::gl::ShaderDef const&>&&, std::__1::tuple<>&&)
0x608000475fc0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&)
0x608000016a70	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned char>&)
0x608000016a40	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000016a00	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000016a10	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000016a20	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000030700	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Context>::shared_ptr<cinder::gl::Context>(cinder::gl::Context*, std::__1::enable_if<is_convertible<cinder::gl::Context*, cinder::gl::Context*>::value, std::__1::shared_ptr<cinder::gl::Context>::__nat>::type)
0x608000016a30	•	16 Bytes	ORAGE	-[CinderViewMac setupRendererWithFrame:renderer:sharedRenderer:]
0x604000016990	•	16 Bytes	ORAGE	-[AppImplMac init:settings:]
0x60800016dc80	•	192 Bytes	ORAGE	std::__1::shared_ptr<ORAGE::COMMON::ModuleManager> std::__1::shared_ptr<ORAGE::COMMON::ModuleManager>::make_shared<>()
0x60800016e100	•	192 Bytes	ORAGE	std::__1::shared_ptr<ORAGE::CONNECTIONS::Cables> std::__1::shared_ptr<ORAGE::CONNECTIONS::Cables>::make_shared<>()
0x60800009a4f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::ensureLinkGroup(int)
0x60800005f9b0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>&&)
0x608000099a00	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009a950	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::ensureLinkGroup(int)
0x6080002407b0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>&&)
0x60800009a9a0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009a630	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::ensureLinkGroup(int)
0x608000241620	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>&&)
0x60800009a9f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x7f93d9054000	•	1,50 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenu> std::__1::shared_ptr<reza::ui::OrageMenu>::make_shared<std::__1::shared_ptr<cinder::app::Window> >(std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009a900	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::ensureLinkGroup(int)
0x608000241650	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>&&)
0x60800009ab80	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::ensureLinkGroup(int)
0x608000241680	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>&&)
0x60800009aa90	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::ensureLinkGroup(int)
0x6080002416e0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>&&)
0x60800009ac70	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::ensureLinkGroup(int)
0x608000241710	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink*>&&)
0x60800009ad60	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::ensureLinkGroup(int)
0x608000241740	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink*>&&)
0x608000241770	•	48 Bytes	ORAGE	boost::signals2::signal<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::signal(boost::signals2::optional_last_value<void> const&, std::__1::less<int> const&)
0x608000030e40	•	32 Bytes	ORAGE	boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::signal_impl(boost::signals2::optional_last_value<void> const&, std::__1::less<int> const&)
0x608000472940	•	64 Bytes	ORAGE	boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::__1::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&)
0x608000031400	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::__1::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::__1::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> > >*)
0x608000016880	•	16 Bytes	ORAGE	boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::__1::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&)
0x608000030fa0	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::optional_last_value<void> >(boost::signals2::optional_last_value<void>*)
0x60800002f5a0	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::invocation_state*)
0x608000472a80	•	64 Bytes	ORAGE	boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::signal_impl(boost::signals2::optional_last_value<void> const&, std::__1::less<int> const&)
0x60800002f5c0	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::mutex>(boost::signals2::mutex*)
0x608000030980	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex> >(boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>*)
0x60800009adb0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ad10	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009acc0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009a090	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ac20	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009aa40	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009ab30	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009a810	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::ensureLinkGroup(int)
0x6080002417a0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, void*> > > > std::__1::__tree<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>, std::__1::greater<int>, true>, std::__1::allocator<std::__1::__value_type<int, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*> > >::__construct_node<std::__1::pair<int const, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*> >(std::__1::pair<int const, cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink*>&&)
0x60800009ae00	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009ae50	•	80 Bytes	ORAGE	boost::signals2::detail::signal_impl<void (ORAGE::COMMON::BaseEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (ORAGE::COMMON::BaseEvent)>, boost::function<void (boost::signals2::connection const&, ORAGE::COMMON::BaseEvent)>, boost::signals2::mutex>::create_new_connection(boost::signals2::detail::garbage_collecting_lock<boost::signals2::mutex>&, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> > const&)
0x608000472ac0	•	64 Bytes	ORAGE	boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex>::connection_body(boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> > const&, boost::shared_ptr<boost::signals2::mutex> const&)
0x6080000314a0	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> > >(boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >*)
0x6080000314c0	•	32 Bytes	ORAGE	boost::detail::shared_count::shared_count<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >(boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex>*)
0x6080000314e0	•	32 Bytes	ORAGE	std::__1::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, std::__1::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> > > >::insert(std::__1::__list_const_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*>, boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> > const&)
0x608000476b00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> >, std::__1::__map_value_compare<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::__1::__value_type<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> >, boost::signals2::detail::group_key_less<int, std::__1::less<int> >, false>, std::__1::allocator<std::__1::__value_type<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> > > >::__construct_node<std::__1::pair<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> > >(std::__1::pair<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::__1::__list_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::__1::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (ORAGE::COMMON::BaseEvent), boost::function<void (ORAGE::COMMON::BaseEvent)> >, boost::signals2::mutex> >, void*> >&&)
0x60800010efa0	•	144 Bytes	ORAGE	cinder::app::RendererGl::defaultResize()
0x60800009aea0	•	80 Bytes	ORAGE	-[AppImplMac startAnimationTimer]
0x60800009af90	•	80 Bytes	ORAGE	-[AppImplMac startAnimationTimer]
0x608000031580	•	32 Bytes	ORAGE	-[AppImplMac startAnimationTimer]
0x7f93dc916550	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6000000396c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60000009d510	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d8c15590	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000016d10	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c15870	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000032c80	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009dab0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016d90	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009dbf0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d905be00	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009dce0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009d970	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ce80	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009b7b0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009b8f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009d6f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009d740	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009dd80	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c15a50	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016ea0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000032f60	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c15c90	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000032f80	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009ddd0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016e70	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009de20	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3200	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009df10	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x608000243a50	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c15e70	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016f00	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000032fa0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c160b0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000032fc0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009de70	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016f30	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009dec0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3280	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e0a0	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c16290	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016f20	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033040	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c164d0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033060	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009df60	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016eb0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009dfb0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3300	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e140	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c166b0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016ef0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033020	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c168f0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033000	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e000	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016f40	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e050	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3380	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e230	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c16ad0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016f50	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000032fe0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c16d10	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033080	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e190	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016f60	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e1e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3080	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f3400	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f3480	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f3580	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e320	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c16ef0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016f70	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000330a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c17130	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000330c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e280	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016f80	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e2d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3600	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e410	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c17310	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016f90	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000330e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c17550	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033100	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e370	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016fa0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e3c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3680	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e500	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c14e60	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000016fb0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c15140	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033120	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009c340	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016fc0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009c2f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d905ea00	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009c5c0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009cbb0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ca70	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009cd90	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009c700	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009cf70	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009cf20	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009ccf0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c15320	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000016e30	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033140	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c17870	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033160	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009d560	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016fd0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009d830	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3700	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e550	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x6080002439c0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c17a50	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017010	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033180	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c17df0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000331a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e460	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017020	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e4b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3780	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e640	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c17fd0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017000	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033220	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c18210	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033240	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e5a0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000016ff0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e5f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x60c000474500	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60c000474440	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60c0004744c0	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60c0000f1b80	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60c00009aa90	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93dc80b210	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000016fe0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c183f0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033200	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009c250	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017030	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009c110	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d9089000	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009c200	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009c980	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009c2a0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009c160	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009e690	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009e6e0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009e730	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009e780	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c185d0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017040	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000032f40	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c18870	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000032f20	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e7d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017050	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009e820	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3800	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009e9b0	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x608000243a20	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c18c90	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000017090	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c18a50	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000331e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009eaf0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000170a0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009ebe0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d9059c00	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009ec30	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009ec80	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ecd0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ed20	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ed70	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009edc0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009ee10	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009ee60	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c18f70	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000170b0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000331c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c191b0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033260	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009eeb0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000170c0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009ef00	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3980	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009f090	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x608000243ae0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c19390	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017100	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033280	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c195d0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000332a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009ef50	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017110	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009efa0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3a00	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009f1d0	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c199f0	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x6080000170f0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c197b0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033320	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009f270	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000170e0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009f2c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3900	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f3a80	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::OrageMenuItem>, std::__1::allocator<std::__1::shared_ptr<reza::ui::OrageMenuItem> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::OrageMenuItem> >&)
0x7f93d9058a00	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009f310	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009f360	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f3b0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f400	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f450	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f4a0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f4f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009f540	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c19cd0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000170d0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033340	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c19f10	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033360	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009f590	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017120	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009f5e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3b80	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009f770	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x608000243a80	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c1a0f0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017160	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033380	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1a330	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000333a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009f630	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017170	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009f680	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3c00	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009f8b0	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c1a750	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000017150	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c1a510	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033420	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009f6d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017140	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009f720	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d9062400	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009f810	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009f860	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f950	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f9a0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009f9f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009fa40	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009fa90	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009fae0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c1aa30	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017130	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033440	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1ac70	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033460	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009fb30	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017180	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009fb80	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3c80	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009fd10	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x608000243ab0	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c1ae50	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000171c0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033480	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1b090	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000334a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009fbd0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000171d0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009fc20	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3d00	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009fe50	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c1b270	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000171b0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033520	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1b4b0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033540	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009fc70	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000171a0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009fcc0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000479ec0	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800047a080	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800047a180	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f3d80	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x60800009ff90	•	80 Bytes	ORAGE	std::__1::__function::__func<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>), std::__1::allocator<ORAGEApp::setup()::'lambda'(ORAGE::COMMON::BaseEvent)::operator()(ORAGE::COMMON::BaseEvent) const::'lambda'(ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>, void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)>::__clone() const
0x7f93d8c1b8d0	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000017190	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c1b690	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033500	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009f040	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000171e0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009eaa0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93d908bc00	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009eb40	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009ea50	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009eb90	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009e8c0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009e870	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009e960	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x60800009eff0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x60800009f130	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c1bbb0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000171f0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000334e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1bdf0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000334c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009f180	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017200	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009fdb0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3e00	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x608000243b10	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c1c210	•	736 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuItem> std::__1::shared_ptr<reza::ui::OrageMenuItem>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, reza::ui::Button::Format const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, reza::ui::Button::Format const&&&)
0x608000017240	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x7f93d8c1bfd0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033560	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60800009e910	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017250	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60800009fe00	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080001e1000	•	256 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080001e1a00	•	256 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x7f93d908cc00	•	4,00 KiB	ORAGE	std::__1::shared_ptr<reza::ui::OrageMenuList> std::__1::shared_ptr<reza::ui::OrageMenuList>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::shared_ptr<cinder::app::Window> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&&, std::__1::shared_ptr<cinder::app::Window>&&)
0x60800009fef0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (), cinder::signals::detail::CollectorDefault<void> >::SignalLink::addBefore(std::__1::function<void ()> const&)
0x60800009ff40	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x608000280050	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x6080002800a0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x6080002800f0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x608000280140	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::MouseEvent&), cinder::app::CollectorEvent<cinder::app::MouseEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::MouseEvent&)> const&)
0x608000280190	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x6080002801e0	•	80 Bytes	ORAGE	cinder::signals::detail::SignalProto<void (cinder::app::KeyEvent&), cinder::app::CollectorEvent<cinder::app::KeyEvent> >::SignalLink::addBefore(std::__1::function<void (cinder::app::KeyEvent&)> const&)
0x7f93d8c1c4f0	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017260	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033580	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1c730	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000335a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x608000280230	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017270	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x608000280280	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3500	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x608000243b40	•	48 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, void*> > > > std::__1::__tree<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::__map_value_compare<ORAGE::COMPONENTS::TYPES, std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf>, std::__1::less<ORAGE::COMPONENTS::TYPES>, true>, std::__1::allocator<std::__1::__value_type<ORAGE::COMPONENTS::TYPES, ORAGE::COMPONENTS::Conf> > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<ORAGE::COMPONENTS::TYPES const&>&&, std::__1::tuple<>&&)
0x7f93d8c1c910	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000172b0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000335c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1cb50	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000335e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x6080002802d0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000172c0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x608000280320	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3b00	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x7f93d8c1cd30	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000172a0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033660	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1cf70	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033680	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x608000280370	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x608000017290	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080002803c0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3e80	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x7f93d8c1d150	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000017280	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033640	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1d390	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x608000033620	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x608000280410	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000172d0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x608000280460	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3f00	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x7f93d8c1d570	•	528 Bytes	ORAGE	reza::ui::Button::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x6080000172e0	•	16 Bytes	ORAGE	reza::ui::Button::Button(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, reza::ui::Button::Format const&)
0x608000033600	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Button>::shared_ptr<reza::ui::Button>(reza::ui::Button*, std::__1::enable_if<is_convertible<reza::ui::Button*, reza::ui::Button*>::value, std::__1::shared_ptr<reza::ui::Button>::__nat>::type)
0x7f93d8c1d7b0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x6080000336a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x6080002804b0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000172f0	•	16 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x608000280500	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x6080000f3880	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f3f80	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f4000	•	128 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6080000f4100	•	128 Bytes	ORAGE	std::__1::__function::__func<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool), std::__1::allocator<reza::ui::OrageMenu::addElement(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::function<void (ORAGE::COMPONENTS::TYPES, glm::vec<2, float, (glm::qualifier)0>)> > > >)::'lambda'(bool)>, void (bool)>::__clone() const
0x7f93d8c1dbd0	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x6080000d5ee0	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x608000479d40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned char, std::__1::map<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<int, std::__1::allocator<int> > > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned char, std::__1::map<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<int, std::__1::allocator<int> > > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned char, std::__1::map<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, std::__1::map<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<int, std::__1::allocator<int> > > > > >, std::__1::less<unsigned char>, true>, std::__1::allocator<std::__1::__value_type<unsigned char, std::__1::map<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<int, std::__1::allocator<int> > > > > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned char const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned char const&>&&, std::__1::tuple<>&&)
0x608000016990	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned char>&)
0x608000479e40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<int, std::__1::allocator<int> > > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int const&>&&, std::__1::tuple<>&&)
0x608000017310	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000479a80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x608000479e80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x608000479dc0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x608000479d80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x608000479e00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x608000479f80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a0c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a100	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a040	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a000	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a140	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x608000479f00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a1c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a200	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a300	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a280	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a440	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a480	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a4c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a500	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a540	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a580	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a5c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a600	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a640	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a680	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a6c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a700	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a740	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a780	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a7c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a800	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a840	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a880	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a8c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a900	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a940	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a980	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047a9c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047aa00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047aa40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047aa80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047aac0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047ab00	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x60800047ab40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*> > > > std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&)
0x6080000336e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60800047ab80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x608000241bc0	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x608000016860	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000033a00	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60800047abc0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x608000016940	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000017300	•	16 Bytes	ORAGE	std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&)
0x608000033a20	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x6080001a1dc0	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60400012a6e0	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60400027bac0	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60400005e750	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60400027bb00	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60400027b9c0	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x604000031c00	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dcb12a10	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x604000031620	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x6040000981f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93dcb131c0	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x60c0000d44a0	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x60c000032c60	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60c0004745c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000243cf0	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x60c000032680	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60c000474380	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x604000032380	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x6040001a16c0	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60c00012a3c0	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60c000474780	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60c000243e10	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60c000474200	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000474680	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000032cc0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dc8165d0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x60c0000328a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60c00009af40	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93dc817d60	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x60c0000d1020	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x60c0000327e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60c000474700	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000243c90	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x60c000032d00	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60c0004746c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x608000033a60	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x6080001a1ea0	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60400012a640	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60400027b800	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60400005dd30	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60400027ba00	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60400027bb40	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x604000032ca0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dcb0c880	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x604000032bc0	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x604000098330	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x604000031320	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x604000030f20	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6040000320a0	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x7f93dcb13460	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x6040000d3010	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x604000030ee0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60400027bb80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60400005e3f0	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x604000032ea0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60400027b3c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000031d80	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x60c0001a1f80	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60000012b7c0	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60000067f300	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x600000244200	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60000067f340	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60000067f380	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x600000039a60	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dc905fa0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x600000039c20	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60000009e0f0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x60000067f3c0	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60000067f400	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60000067f440	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x6000001a1340	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60000012b680	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60000067f500	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x6000002447a0	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60000067f540	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60000067f580	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x600000039d40	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dc918ce0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x600000039d20	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60000009e1e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x60000067f5c0	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60000067f600	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60000067f640	•	64 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x7f93dc919cb0	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x6000000d31d0	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x600000039d60	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60000067f680	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x600000244560	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x600000039da0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60000067f6c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000032b40	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x60c0001a2060	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60c000129880	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60c000474640	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60c000243e40	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60c000474600	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000474740	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000032740	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dc818000	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x60c000032c80	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60c00009ad60	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93dc818350	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x60c0000d3f60	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x60c0000327c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60c0004747c0	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000243de0	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x60c0000325c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60c000474800	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x600000039dc0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x6000001a1420	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60c00012a000	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60c000474840	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60c000243c00	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60c000474880	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c0004748c0	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000032a00	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dc8185f0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x60c000032c00	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60c00009a5e0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x60c000032400	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60c000032ba0	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x60c000032a80	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::shared_ptr<reza::ui::View>, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::shared_ptr<reza::ui::View> >&)
0x7f93dc8187d0	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x60c0000d30f0	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x60c0000329c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60c000474900	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000243ed0	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x60c000032a20	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60c000474940	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000032120	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x60c0001a2140	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60c00012a320	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60c000474980	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60c000243f00	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60c0004749c0	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000474a00	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c0000321e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dc818bb0	•	480 Bytes	ORAGE	reza::ui::Label::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, reza::ui::FontSize)
0x60c000032360	•	32 Bytes	ORAGE	std::__1::shared_ptr<reza::ui::Label>::shared_ptr<reza::ui::Label>(reza::ui::Label*, std::__1::enable_if<is_convertible<reza::ui::Label*, reza::ui::Label*>::value, std::__1::shared_ptr<reza::ui::Label>::__nat>::type)
0x60c00009aea0	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<reza::ui::View> > > >::__construct_node<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> > >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<reza::ui::View> >&&)
0x7f93dc818eb0	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x60c0000d1410	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x60c000031fa0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x60c000474a40	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60c000243e70	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x60c000031e20	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x60c000474a80	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x604000031ce0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x6040001a15e0	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x604000129ec0	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x60400027b700	•	64 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60400005e600	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60400027b4c0	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60400027b740	•	64 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x6040000326c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x7f93dcb138c0	•	528 Bytes	ORAGE	-[RendererImplGlMac flushBuffer]
0x608000017330	•	16 Bytes	ORAGE	std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<unsigned char>&)
0x608000017350	•	16 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::Vao*, std::__1::allocator<cinder::gl::Vao*>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::Vao*>&)
0x7f93d90aa400	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d90bc400	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d908ee00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d90e9600	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d90fb600	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d910d000	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9099600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d90d6e00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d911f800	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9131200	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d985b400	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9886c00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9898c00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98aa600	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98cee00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98e0800	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d985e800	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98fc000	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d990e000	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d991fa00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d985fa00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc066e00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc078e00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc08a800	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc058200	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc0a6000	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc0b8000	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc0c9a00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc09e000	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc0dc200	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc0ee200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc0ffc00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x10f4e5000	•	2,05 MiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60c000243ea0	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x6080000320a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6080000f2900	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x608000032660	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60800016f0c0	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x60c000032900	•	32 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<glm::vec<2, int, (glm::qualifier)0>, glm::vec<2, int, (glm::qualifier)0> >, std::__1::allocator<std::__1::pair<glm::vec<2, int, (glm::qualifier)0>, glm::vec<2, int, (glm::qualifier)0> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<glm::vec<2, int, (glm::qualifier)0>, glm::vec<2, int, (glm::qualifier)0> > >&)
0x60c0000f0d00	•	128 Bytes	ORAGE	std::__1::__split_buffer<glm::mat<4, 4, float, (glm::qualifier)0>, std::__1::allocator<glm::mat<4, 4, float, (glm::qualifier)0> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<glm::mat<4, 4, float, (glm::qualifier)0> >&)
0x60c0000f0780	•	128 Bytes	ORAGE	std::__1::__split_buffer<glm::mat<4, 4, float, (glm::qualifier)0>, std::__1::allocator<glm::mat<4, 4, float, (glm::qualifier)0> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<glm::mat<4, 4, float, (glm::qualifier)0> >&)
0x60c0000f0480	•	128 Bytes	ORAGE	std::__1::__split_buffer<glm::mat<4, 4, float, (glm::qualifier)0>, std::__1::allocator<glm::mat<4, 4, float, (glm::qualifier)0> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<glm::mat<4, 4, float, (glm::qualifier)0> >&)
0x60c000032d80	•	32 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg const*, std::__1::allocator<cinder::gl::GlslProg const*>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg const*>&)
0x6080000f2880	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x6080000333e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x600000244860	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x600000039ac0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6040000b5060	•	96 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x6040001a1500	•	224 Bytes	ORAGE	cinder::gl::GlslProg::create(cinder::gl::GlslProg::Format const&)
0x60c0001299c0	•	160 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Attribute, std::__1::allocator<cinder::gl::GlslProg::Attribute>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Attribute>&)
0x7f93dc81bce0	•	448 Bytes	ORAGE	std::__1::__split_buffer<cinder::gl::GlslProg::Uniform, std::__1::allocator<cinder::gl::GlslProg::Uniform>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<cinder::gl::GlslProg::Uniform>&)
0x60c000244110	•	48 Bytes	ORAGE	cinder::gl::GlslProg::cacheActiveUniforms()
0x60c0000d0fb0	•	112 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c0000d12c0	•	112 Bytes	ORAGE	cinder::gl::UniformValueCache::UniformValueCache(unsigned int)
0x60c000032860	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::GlslProg>::shared_ptr<cinder::gl::GlslProg>(cinder::gl::GlslProg*, std::__1::enable_if<is_convertible<cinder::gl::GlslProg*, cinder::gl::GlslProg*>::value, std::__1::shared_ptr<cinder::gl::GlslProg>::__nat>::type)
0x60c00009b800	•	80 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, void*> > > > std::__1::__tree<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, std::__1::__map_value_compare<cinder::gl::ShaderDef, std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> >, std::__1::less<cinder::gl::ShaderDef>, true>, std::__1::allocator<std::__1::__value_type<cinder::gl::ShaderDef, std::__1::shared_ptr<cinder::gl::GlslProg> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<cinder::gl::ShaderDef const&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<cinder::gl::ShaderDef const&>&&, std::__1::tuple<>&&)
0x7f93db077800	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db07be00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9143a00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9155a00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9167400	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d909ec00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dd027400	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dd039400	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9196000	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d909a800	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9182c00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d91a8800	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d91ba200	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d909c600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d91cca00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d91dea00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d91f0400	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9194c00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc11be00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9932200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9943c00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x11164a000	•	664,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98f6c00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9956400	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9968400	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9979e00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98f7e00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9995600	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d99a7600	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d99b9000	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d99cb800	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d99dd800	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60400005eba0	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x6040000325a0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6040000f2480	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x604000032fe0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60400016e040	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93d98f9000	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98fa200	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d99ef200	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a01200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a12c00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d998d600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a38800	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a4a800	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a5c200	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d998e800	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a25400	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a6ea00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a80400	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x1151ba000	•	308,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9a92c00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9aa4c00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60400005da00	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x604000032ee0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6040000f1c80	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x604000032fc0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60400016e1c0	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93d9a37400	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d998fa00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9ab6600	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9acec00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9ae0600	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b06200	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b18200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x111591000	•	276,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60400005ef90	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x604000032fa0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6040000f2600	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x604000032f60	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60400016e280	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93dc148c00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc15a600	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc192200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1a3c00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1b6400	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x11531d000	•	308,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60c000244050	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x60c000032da0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x60c0000f0880	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x60c0000330e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60c00016d8c0	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93dc17ee00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc117600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1c7e00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1dda00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1ef400	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc119200	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc215000	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc227000	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc238a00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc201c00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc24b200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x115390000	•	308,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60c000244320	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x60c000031f40	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x60c0000f0580	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x60c000032d40	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60c00016e280	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93dc213c00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1daa00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc25cc00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc272800	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc284200	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc26ec00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc2a9e00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc2bbe00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc2cd800	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc1dbc00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc296a00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc2e0000	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc2f1a00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x115403000	•	308,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc304200	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93dc316200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60c0002443b0	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x60c000032f80	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x60c0000f0600	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x60c0000328c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60c00016e1c0	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93db076600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db07d000	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db08fe00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db0a9a00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db0bb400	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db0e1000	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db0f3000	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x1150a4000	•	296,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x600000244830	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x60000003ad80	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6000000f5d00	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x60000003ac00	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60000016d440	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93db104a00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db0a2a00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db0cdc00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db107c00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93db119600	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9990c00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b29c00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b3bc00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b4d600	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9992e00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9af2e00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b5fe00	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b71800	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9994000	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b84000	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b96000	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9ba7a00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9b04e00	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9bba200	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9bcc200	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9bddc00	•	74,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x1155ca000	•	616,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9bf0400	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9c02400	•	70,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x60400005e6c0	•	48 Bytes	ORAGE	cinder::gl::Vbo::create(unsigned int, long, void const*, unsigned int)
0x604000032f40	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vbo>::shared_ptr<cinder::gl::Vbo>(cinder::gl::Vbo*, std::__1::enable_if<is_convertible<cinder::gl::Vbo*, cinder::gl::Vbo*>::value, std::__1::shared_ptr<cinder::gl::Vbo>::__nat>::type)
0x6040000f2180	•	128 Bytes	ORAGE	cinder::gl::createVaoImplCore()
0x6040000329c0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Vao>::shared_ptr<cinder::gl::VaoImplCore>(cinder::gl::VaoImplCore*, std::__1::enable_if<is_convertible<cinder::gl::VaoImplCore*, cinder::gl::Vao*>::value, std::__1::shared_ptr<cinder::gl::Vao>::__nat>::type)
0x60400016e340	•	192 Bytes	ORAGE	std::__1::__split_buffer<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib>, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::pair<unsigned int, cinder::gl::Vao::VertexAttrib> >&)
0x7f93d982c200	•	4,50 KiB	ORAGE	-[WindowImplBasicCocoa getRenderer]
0x7f93d982d400	•	4,50 KiB	ORAGE	-[CinderViewMac drawRect:]
0x7f93dc920ce0	•	672 Bytes	ORAGE	cinder::gl::Fbo::create(int, int, cinder::gl::Fbo::Format const&)
0x6000000d3f60	•	112 Bytes	ORAGE	cinder::gl::Texture2d::create(int, int, cinder::gl::Texture2d::Format const&)
0x60000003a840	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Texture2d>::shared_ptr<cinder::gl::Texture2d>(cinder::gl::Texture2d*, std::__1::enable_if<is_convertible<cinder::gl::Texture2d*, cinder::gl::Texture2d*>::value, std::__1::shared_ptr<cinder::gl::Texture2d>::__nat>::type)
0x600000866140	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::TextureBase> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x600000245ac0	•	48 Bytes	ORAGE	cinder::gl::Renderbuffer::create(int, int, unsigned int, int, int)
0x60000003a9e0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Renderbuffer>::shared_ptr<cinder::gl::Renderbuffer>(cinder::gl::Renderbuffer*, std::__1::enable_if<is_convertible<cinder::gl::Renderbuffer*, cinder::gl::Renderbuffer*>::value, std::__1::shared_ptr<cinder::gl::Renderbuffer>::__nat>::type)
0x600000866180	•	64 Bytes	ORAGE	std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<cinder::gl::Renderbuffer> > > >::__construct_node<std::__1::piecewise_construct_t const&, std::__1::tuple<unsigned int&&>, std::__1::tuple<> >(std::__1::piecewise_construct_t const&&&, std::__1::tuple<unsigned int&&>&&, std::__1::tuple<>&&)
0x60000003aec0	•	32 Bytes	ORAGE	std::__1::shared_ptr<cinder::gl::Fbo>::shared_ptr<cinder::gl::Fbo>(cinder::gl::Fbo*, std::__1::enable_if<is_convertible<cinder::gl::Fbo*, cinder::gl::Fbo*>::value, std::__1::shared_ptr<cinder::gl::Fbo>::__nat>::type)
0x7f93d985d600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9aca000	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d98bce00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9acb200	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9acc400	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9c1ce00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9acd600	•	4,50 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9c2ee00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
0x7f93d9c42c00	•	72,00 KiB	ORAGE	std::__1::__split_buffer<reza::ui::RenderData, std::__1::allocator<reza::ui::RenderData>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<reza::ui::RenderData>&)
